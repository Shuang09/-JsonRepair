{
   "AssignmenExpssion":[
       "ef
       "right"    ],   "Assgmentattern": [
        lef",      "right"
   ]
   ArayExpreso": 
       "elemets"    ],
   ArryPattrn" [
     "lements"   ],
   "ArrowFctiExession":[
      "arams",
     "bod"
   ,
   "atExressin: [       "argment"
    ,
    "BlokStatement" [      "bod"
    ],
   "inaryExession": 
      lt",       "right"
   ],
   "BreaSttement":[
   "le"
   ]
 "CalExession" 
      "cllee",      "argumets"
    ],
   "CtchCause[
     "pam",
     "body
   ]
    "ClassBody": [
     "od"
  ],
    "Classclrtion": [      "i",       supClss,
      "body
  ]
   "ClasExresson": [
        "d,
        "superCla,
       boy"
    ],
    "CnionlExrssion: [      "est",
     "consuent",
      "alternate"
    ],
    "Continetatement": [
       "labl"
 
   Deugertatent": ],
    "DoWhileStatement:[
        "body",
        "test"
    ],
   "EmpySatement": [],
  EoAllDeclaration": [      "source"
  ,   "ExorteuDlation": [
       "dclrton
   ],
    "ExportNamdDelraion": 
        delaratio",
        "scifiers",
       "souce"
   ],
  "ExportSpcife: [
      "expte",
       "local"   ],
    "ExpssionStaement": [     "expssion"
   ],
    "xperimntaRestPoprty": [       "arumn"
   ],
  xerimentalSpredPropet": [      "agumet"
    ],
    "ForStatment":[
    "init",       "tet",
     "update",
      "boy"
   ],   "ForInStatement":[
        left",
    "rigt,
      "bod"
    
   FoOStateent": 
      "lft",
       "right",       ody"
    ],
    "FuntonDclarai": [
        "id",
       pram",
        "body"
    ,  "FuionExesio":[
    "id"
       "paams",
       body"
   ],
   "Idetfir": [],    fStatemet" [
      test,
     "cosequnt",
        alernat    ],    "ImpotDeclration": [
      "speciiers,        "sore"
  ],   "ImporDeultSpecifir": [
        "lol"
    ],   "IportaepacSpecifier:[
      loal
    
  "mortpecifier":[
    "impored",       "lcal"
    ],
   "SXAttriute: [
        "ame",
      va    ],
    "SXloingElmt:[
       "name"
   ],
    "JSXElemen": [
      openingElement"
       "children",    "csngElemet"
    ,
   JXEmptExprion": [],   SXEpressionCotainer": [
      "exresson
    ],
   "JSXdetifie: [],
   "JSXMbEressio": [
        "object",      "roprty"   ],   "JSXNamepacedName":[
       "nmspace",
       "nme"
    ],
    SXpeninEleet": [
    name"
     "arbutes"
    ,
   "JSXSpreadtribute": 
      "rgunt"
   ]
    "JSXText": [],
  "SXFrament":[
     "openingrgent",
    "cildren",
       cloigFramen"
   ],
   "Liter" [],
   "LabeledSttement": [
      "label",
      "bo"
    ],
   "LgicaExprssin" [
     "left"
      "righ    ],
   "MembeExreson:[
       bject",
        proprt"
    ],
  "MtaPrperty":[
      "mta
        "property"
  ],
  "MehodDeinion: [
    "ey"
      "value"
   ],
   "expreson":
       "calle",
       "argumnts"
    ,    "ObjctEpressio": [
        "poperies"   ]
  "ObjectPaten" [
     "poprties"
   ],
    Program":[
      "body"
    ],
   "Property":[     "ke"
        "value"    ,
   "etEemt: 
     "argument"
  ],
   ReturnSatemen: [
        "rgument"
    ],
   SquencEpression" 
    expreins
    ],
   SpreaElemen":[
     "ren"
    ],
   "pr": [],    "SitchStemen": [
     "disrimnnt",
     "aes"
    ,
   "SwitchCs": [      "tt"
       "conseqe
   ,
   "TaggedTmpltExpesio": [      "tag"
      "quas"   ],
    "TemlateEemen": ]
    "TeplaeLiteral" [
        "uasi"
       "expreions"
  ,
   TisExprsson": []    "Throwtateent: [
    "umen   ],
    "TryStatemen"
      "bok",
      hadler,
     fialier"  ],
   UryExprsson": 
      "rgument"   ]
    "UpdteExression 
       "rgument"
    ],
   "aiablDeclaatio:
        "clrions"
   ,
   "VariabeDeclarator": [
      "id",
     ini"
   ],
   "WhlStateent": [
       test",
     "ody"
    ],
  "WithStatmet: 
    "ojct",
     "body"
    ],
    ieldExpression": [      "argument"
    ]