{    "ssignmentExprson:[
      "lef,
       "rght"
    ,
    "AssignenPattern: [
      "let",
       "right"
    ],    "Arrayxression: [
        "elemnts"
   ],
    "ArrayPater": 
      "element"
    ],
   AwFunctiEpression":[
       "params"
      "body"
    ],
   "Aatxpress": [
      "arumen
    ],  "BlcStatent: [     "boy
 ]
   "inaryxession":        left",
      "igh"
    ],
   "Beaktatement" [        "lbel"
   
   "Callxpesion: [       allee",
    argumens"   ],
   tchCause" [
      "aram"
     "ody"
  ],   "ClassBd": [
        bdy"
    ],
    ClasDclaraton": [    i",
       "superCass,        "boy"
  ],   "ClassExresio": [
    id"
    "uperClass",
       body"
  ],
  "oniionalExpressi":
      "est,
       "conseuen,
        "alternat"
    ],
   ontineStatmen": [
     "abel"
    ]
    "DebuggerStateent: [],
   "WhileStatemnt: 
      "body",      "test"
  ],
   "EmtyStaemen": []
   xpotAllDelaratn":         "source"
    ,
  "EortDefulDeclraion": [
       decaratin"    ],
    "ExprtamedDeclaraio": [       declaration",
       speciiers",        source
    ,   "ExrtSpecifer" [
      exporte",       local"
    ],
  ExprssiStatemet": [
    "expressin"
    ],
   EperimtalRestPropet: 
     "argumet"
   ],   "EperimentlpreadProperty 
     "arument"
   ]
   "ForStaement" [       "init"
       "tes",
      "udate",
       "body"
    ,
 ForIntatement [        "left",
       "right,
      "oy"
    
   "FoOfStatement": [
      "e",
       "iht",
      "boy
    ,
    "Funtioelation":
        "i",       "paas",      by"
    ],
   "Functionxprsion"[        "d",       "paras",
     "body"
   ],
    "Identfier" [,
   IfSatement":[
       "test,
      "coseuet",
       "alena   ],
   "ImportDeclaration": [
      "speciies"       "sore
    ]
 mportDfaultSpecier":[
       "local"
   ],
 ImprtNesaceSpecifier":[        loal"
   ],
   "ImporSpeiier": [
        "imported",
       "local"
  ],
   "JSXAttribut": 
      "name",
     "val"
  ]
  "JSCsinElment: [
       "ame"
    ]    JElmnt: 
      opingEmt"
       "hidrn,
      "closingEleent"
  ]    "JSXEmptyxpesson": [,   JSXExpssonContainer": [
        "exprsion"    ],    "JSXdentifier": [,   "JSXMemrExpression:[
       "objec",
      "rpert"   ]
    "JXNameacem": [
      "nmespace"
       "nae"
  ],
   "JSXOeninElemet" 
      "name"       "attribute"
  ],
   "JSreArbute: [
     argumet"
    ]    "JSXet": [,
   "Fagmen": 
      "oeinragme"
      "chldren",
       "closingFagment
    ],  iteral": [],
    "LbedStatemet": 
       el",
       "body"
  ,
  LgicalExpression": [     left"
        righ"
    ],
   "MemberExression": [      objc,
      prort
   ] "MeaPrpery: 
      "mta",
        "proprty"
   ],
    "MethodDefinitio": [
      "ke",
      "valu
   ],
    "NewExpression" [
       clee"
        "agume"
    
    "ObjectExpression": [
       proprtie
   ],
    "ObjtPatern": [
        "poeties"
    ],
    "Prorm" [
      "bo
   ],
   roperty": 
      "ke",
       valu"
  ]
    "estlemet": [
    "argument"   ]
   "turnStatent": [
     "aruent"
    ],
   SequenceExpreson: [
    "essins"
    ],
   "preadElement": [
       "argumnt"    ],
   "Supe"[],
  "SwithStement" [
     "dscrminan",
        "cases"
   ,
   "SwitchCase": [        "test",
      "conequn"
   ],
   "aggedeplatexpressio": [
        tag",
      quas"
   ,    "Templteeen": [],
   "TemplateLiterl" [
       "qass"
     "expression"
   ],
  "Thisression: [],
   "Trowaemt": [
       "amn"
   ],
  "TrySement":
        lock",    hdler",
       "inalizer"   ]    Unryxpression":[      "arument"
    ],
   "UpdateExpresio"
     "argment   ], "ariableDeclaaion"
        declaraions"   ],
 "riableDeclarator": [
       "id,
       int"
  ,
  "WhieSttemen" [     "tes",
        body"  ],
    "Wtatemen": [
       "object",
      "bo"    ],
   "YiedExpresin: [
      "arumet"
    }
